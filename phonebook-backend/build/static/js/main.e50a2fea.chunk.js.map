{"version":3,"sources":["services/phonebook.js","components/Filter.js","components/Form.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["url","phonebookServices","getContacts","axios","get","then","response","data","createContact","contact","post","updateContact","put","id","deleteContact","delete","Filter","search","handleSearch","className","value","onChange","Form","newName","handleNameInput","newNumber","handleNumberInput","addPerson","type","onClick","Persons","persons","deletePerson","filter","person","name","toLocaleLowerCase","includes","number","map","Notification","message","style","App","useState","setPersons","setNewName","setNewNumber","setSearch","alertMsg","setAlertMsg","msgStyle","setMsgStyle","useEffect","contacts","e","target","preventDefault","newPersonObject","length","console","log","some","window","confirm","personToUpdate","find","updatedContact","setTimeout","catch","error","returnedPersons","personToDelete","removedList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e50a2fea.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = \"/api/persons\";\r\n\r\nconst getContacts = () => {\r\n  const request = axios.get(url);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst createContact = (contact) => {\r\n  const request = axios.post(url, contact);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst updateContact = (contact) => {\r\n  const request = axios.put(`${url}/${contact.id}`, contact);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${url}/${id}`);\r\n  return request;\r\n};\r\n\r\nconst phonebookServices = { getContacts, createContact, updateContact, deleteContact };\r\n\r\nexport default phonebookServices;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ search, handleSearch }) => (\r\n  <form>\r\n    <div className=\"search-container\">\r\n      Filter with (name or number){\" \"}\r\n      <input value={search} onChange={handleSearch} id=\"search\" />\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Form = ({\r\n  newName,\r\n  handleNameInput,\r\n  newNumber,\r\n  handleNumberInput,\r\n  addPerson,\r\n}) => (\r\n  <form>\r\n    <div className=\"input\">\r\n      Name: <input value={newName} onChange={handleNameInput} id=\"name\" />\r\n    </div>\r\n    <div className=\"input\">\r\n      Number:{\" \"}\r\n      <input value={newNumber} onChange={handleNumberInput} id=\"number\" />\r\n    </div>\r\n    <div className=\"btn\">\r\n      <button type=\"submit\" onClick={addPerson}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, search, deletePerson }) => {\r\n  // callback for filter\r\n  const filterPerson = (person) =>\r\n    person.name.toLocaleLowerCase().includes(search.toLocaleLowerCase()) ||\r\n    person.number.includes(search);\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {/* show only persons compatible with the search */}\r\n        {persons.filter(filterPerson).map((person) => (\r\n          <li key={person.name}>\r\n            {person.name}: <span>{person.number}</span>\r\n            <button onClick={() => deletePerson(person.id)} className=\"del-btn\">\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, style }) => {\r\n  if (message === null) return null;\r\n  return <div className={style}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport phonebookServices from \"./services/phonebook\";\r\nimport Filter from \"./components/Filter\";\r\nimport Form from \"./components/Form\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n  // setup hooks\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [alertMsg, setAlertMsg] = useState(null);\r\n  const [msgStyle, setMsgStyle] = useState();\r\n\r\n  useEffect(() => {\r\n    phonebookServices.getContacts().then((contacts) => setPersons(contacts));\r\n  }, []);\r\n\r\n  // change the input and set the newName\r\n  const handleNameInput = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  // and the newNumber\r\n  const handleNumberInput = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  // change search input\r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  // event handler when add button in clicked\r\n  const addPerson = (e) => {\r\n    // prevent page reload\r\n    e.preventDefault();\r\n    // create new person object to add\r\n    const newPersonObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n      id: persons[persons.length - 1].id + 1,\r\n    };\r\n    console.log(`Created new person object ${newPersonObject.name}`);\r\n\r\n    // check if this person already exist\r\n    if (\r\n      persons.some(\r\n        (person) =>\r\n          person.name.toLocaleLowerCase() ===\r\n          newPersonObject.name.toLocaleLowerCase()\r\n      )\r\n    ) {\r\n      // if it does, check if user want to update it\r\n      if (\r\n        window.confirm(`${newName} already in the Phonebook, wanna update it?`)\r\n      ) {\r\n        const personToUpdate = persons.find(\r\n          (person) => person.name === newName\r\n        );\r\n        newPersonObject.id = personToUpdate.id;\r\n        console.log(newPersonObject.id);\r\n        phonebookServices\r\n          .updateContact(newPersonObject)\r\n          .then((updatedContact) => {\r\n            console.log(\r\n              `Update ${updatedContact.id} ${updatedContact.name} number to ${updatedContact.number}`\r\n            );\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== updatedContact.id ? person : updatedContact\r\n              )\r\n            );\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n\r\n            setAlertMsg(`Updated contact ${newPersonObject.name}`);\r\n            setMsgStyle(\"add-message\")\r\n            setTimeout(() => {\r\n              setAlertMsg(null);\r\n            }, 2000);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n\r\n            setAlertMsg(`Sorry, the contact ${newPersonObject.name} was deleted from server`);\r\n            setMsgStyle(\"sorry-message\")\r\n            setTimeout(() => {\r\n              setAlertMsg(null);\r\n            }, 2000);\r\n          });\r\n      } else {\r\n        // if he dont want to update, reset input\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n      }\r\n    } else {\r\n      // else, add person to phonebook database\r\n      phonebookServices\r\n        .createContact(newPersonObject)\r\n        .then((returnedPersons) => {\r\n          setPersons(returnedPersons);\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n\r\n          setAlertMsg(`Created new contact ${newPersonObject.name}`);\r\n          setMsgStyle(\"add-message\")\r\n          setTimeout(() => {\r\n            setAlertMsg(null);\r\n          }, 2000);\r\n        });\r\n    }\r\n  };\r\n\r\n  // event handler for deleting contacts\r\n  const deletePerson = (id) => {\r\n    const personToDelete = persons.find((person) => person.id === id);\r\n    console.log(personToDelete);\r\n    if (window.confirm(`Do you want to delete entry ${personToDelete.name}`)) {\r\n      console.log(`Delete id: ${id}`);\r\n      phonebookServices.deleteContact(id).then(() => {\r\n        const removedList = persons.filter((person) => person.id !== id);\r\n        setPersons(removedList);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Phonebook</h2>\r\n      <Filter search={search} handleSearch={handleSearch} />\r\n      <Form\r\n        newName={newName}\r\n        handleNameInput={handleNameInput}\r\n        newNumber={newNumber}\r\n        handleNumberInput={handleNumberInput}\r\n        addPerson={addPerson}\r\n      />\r\n      <Notification message={alertMsg} style={msgStyle} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} search={search} deletePerson={deletePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}