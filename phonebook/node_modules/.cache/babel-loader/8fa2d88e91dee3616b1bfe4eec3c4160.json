{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Katsuragawa\\\\Development\\\\Full Stack Open 2021\\\\full-stack-open\\\\part2\\\\phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport phonebookServices from \"./services/phonebook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  search,\n  handleSearch\n}) => /*#__PURE__*/_jsxDEV(\"form\", {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [\"Filter with (name or number)\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: search,\n      onChange: handleSearch,\n      id: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Filter;\n\nconst Form = ({\n  newName,\n  handleNameInput,\n  newNumber,\n  handleNumberInput,\n  addPerson\n}) => /*#__PURE__*/_jsxDEV(\"form\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newName,\n      onChange: handleNameInput,\n      id: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [\"Number:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newNumber,\n      onChange: handleNumberInput,\n      id: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: addPerson,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\n_c2 = Form;\n\nconst Persons = ({\n  persons,\n  search\n}) => {\n  // event handler for deleting contacts\n  // const deletePerson = (id) => {\n  //   // e.preventDefault();\n  //   console.log(`Delete id: ${id}`);\n  //   phonebookServices.deleteContact(id).then((response) => {\n  //     console.log(response.data);\n  //   });\n  // };\n  // callback for filter\n  const filterPerson = person => person.name.toLocaleLowerCase().includes(search.toLocaleLowerCase()) || person.number.includes(search);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: persons.filter(filterPerson).map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [person.name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: person.number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePerson(person.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, person.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Persons;\n\nconst App = () => {\n  _s();\n\n  // setup hooks\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    phonebookServices.getContacts().then(contacts => setPersons(contacts));\n  }, []); // change the input and set the newName\n\n  const handleNameInput = e => {\n    setNewName(e.target.value);\n  }; // and the newNumber\n\n\n  const handleNumberInput = e => {\n    setNewNumber(e.target.value);\n  }; // change search input\n\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  }; // event handler when add button in clicked\n\n\n  const addPerson = e => {\n    // prevent page reload\n    e.preventDefault(); // create new person object to add\n\n    const newPersonObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1\n    }; // check if this person already exist\n\n    if (persons.some(person => person.name.toLocaleLowerCase() === newPersonObject.name.toLocaleLowerCase())) {\n      // if it does, alert\n      window.alert(`${newName} already in the Phonebook`);\n    } else {\n      // else, add person to phonebook database\n      phonebookServices.createContact(newPersonObject).then(createdContact => {\n        console.log(`Add new person: ${createdContact}`);\n        setPersons(persons.concat(createdContact));\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      search: search,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      newName: newName,\n      handleNameInput: handleNameInput,\n      newNumber: newNumber,\n      handleNumberInput: handleNumberInput,\n      addPerson: addPerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: persons,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"R4sCTFRWt8/DX8r8WywD0zhamyQ=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Persons\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/Katsuragawa/Development/Full Stack Open 2021/full-stack-open/part2/phonebook/src/App.js"],"names":["React","useEffect","useState","phonebookServices","Filter","search","handleSearch","Form","newName","handleNameInput","newNumber","handleNumberInput","addPerson","Persons","persons","filterPerson","person","name","toLocaleLowerCase","includes","number","filter","map","deletePerson","id","App","setPersons","setNewName","setNewNumber","setSearch","getContacts","then","contacts","e","target","value","preventDefault","newPersonObject","length","some","window","alert","createContact","createdContact","console","log","concat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport phonebookServices from \"./services/phonebook\";\r\n\r\nconst Filter = ({ search, handleSearch }) => (\r\n  <form>\r\n    <div className=\"search-container\">\r\n      Filter with (name or number){\" \"}\r\n      <input value={search} onChange={handleSearch} id=\"search\" />\r\n    </div>\r\n  </form>\r\n);\r\n\r\nconst Form = ({\r\n  newName,\r\n  handleNameInput,\r\n  newNumber,\r\n  handleNumberInput,\r\n  addPerson,\r\n}) => (\r\n  <form>\r\n    <div className=\"input\">\r\n      Name: <input value={newName} onChange={handleNameInput} id=\"name\" />\r\n    </div>\r\n    <div className=\"input\">\r\n      Number:{\" \"}\r\n      <input value={newNumber} onChange={handleNumberInput} id=\"number\" />\r\n    </div>\r\n    <div className=\"btn\">\r\n      <button type=\"submit\" onClick={addPerson}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nconst Persons = ({ persons, search }) => {\r\n  // event handler for deleting contacts\r\n  // const deletePerson = (id) => {\r\n  //   // e.preventDefault();\r\n  //   console.log(`Delete id: ${id}`);\r\n  //   phonebookServices.deleteContact(id).then((response) => {\r\n  //     console.log(response.data);\r\n  //   });\r\n  // };\r\n\r\n  // callback for filter\r\n  const filterPerson = (person) =>\r\n    person.name.toLocaleLowerCase().includes(search.toLocaleLowerCase()) ||\r\n    person.number.includes(search);\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {/* show only persons compatible with the search */}\r\n        {persons.filter(filterPerson).map((person) => (\r\n          <li key={person.name}>\r\n            {person.name}: <span>{person.number}</span>\r\n            <button onClick={() => deletePerson(person.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  // setup hooks\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    phonebookServices.getContacts().then((contacts) => setPersons(contacts));\r\n  }, []);\r\n\r\n  // change the input and set the newName\r\n  const handleNameInput = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  // and the newNumber\r\n  const handleNumberInput = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  // change search input\r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  // event handler when add button in clicked\r\n  const addPerson = (e) => {\r\n    // prevent page reload\r\n    e.preventDefault();\r\n    // create new person object to add\r\n    const newPersonObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n      id: persons.length + 1,\r\n    };\r\n\r\n    // check if this person already exist\r\n    if (\r\n      persons.some(\r\n        (person) =>\r\n          person.name.toLocaleLowerCase() ===\r\n          newPersonObject.name.toLocaleLowerCase()\r\n      )\r\n    ) {\r\n      // if it does, alert\r\n      window.alert(`${newName} already in the Phonebook`);\r\n    } else {\r\n      // else, add person to phonebook database\r\n      phonebookServices\r\n        .createContact(newPersonObject)\r\n        .then((createdContact) => {\r\n          console.log(`Add new person: ${createdContact}`);\r\n          setPersons(persons.concat(createdContact));\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Phonebook</h2>\r\n      <Filter search={search} handleSearch={handleSearch} />\r\n      <Form\r\n        newName={newName}\r\n        handleNameInput={handleNameInput}\r\n        newNumber={newNumber}\r\n        handleNumberInput={handleNumberInput}\r\n        addPerson={addPerson}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} search={search} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}